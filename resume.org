#+STARTUP: overview hideblocks
#+LATEX: \documentclass[]{twentysecondcv}

#+LATEX: \begin{document}

#+CALL: latex-contact-info()

#+RESULTS:
#+begin_export latex
\profilepic{resources/muffin-avatar.jpg}
\cvname{Brandon Ellington}
\cvjobtitle{Networked\n +Social Systems Engineer}
\cvdate{June 25 1993}
\cvaddress{United States}
\cvnumberphone{(206)450-1343}
\cvmail{branjam4@gmail.com}
\cvsite{branjam.dev}
#+end_export

#+begin_export latex
\aboutme{
I use metacognition to link big picture insights with individual experiences, I make the critical connections to help teams move forward faster.

Interests

- Building technical and social trust into systems.

\n- Measuring growth in creative and valuable ways.

\n- Using critical thinking to empower organizations to make change.}
#+end_export

#+CALL: makeskillbar()

#+RESULTS:
#+begin_export latex
\skills{{Python/4},{Critical Thinking/5},{Systems Engineering/4},{Social Data Mining/3.6},{Version Control/3.5}}
#+end_export

#+CALL: makeskillstext()

#+RESULTS:
#+begin_export latex
\skillstext{{emacs/3.4},{shell/3.4},{database querying/3},{org-mode/3},{object-oriented programming/2.9},{image provisioning/2.5},{clojure/2.1},{php/2}}
#+end_export

#+LATEX: \makeprofile

* education

#+CALL: maketi(tb=education-table,param='(:skip 2 :llfmt nil))

#+RESULTS:
#+begin_export latex
\begin{twenty}
  \twentyitem
    {2017-2020}
    {Bachelor of Science}
    {The Evergreen State College}
    {Majoring in Computer Science}
  \twentyitem
    {2017-2020}
    {Bachelor of Arts}
    {The Evergreen State College}
    {Business Concentration}
\end{twenty}
#+end_export

* awards, activities, and achievements
#+CALL: mktishort(tb=awards-table,param='(:skip 2 :llfmt nil))

#+RESULTS:
#+begin_export latex
\begin{twentyshort}
  \twentyitemshort
    {June 2019}
    {Innovation Across the Americas Award Recipient}
  \twentyitemshort
    {October 2018}
    {Equity Honors Nominee}
  \twentyitemshort
    {February 2018}
    {Featured Speaker, DRIVE Conference 2018}
  \twentyitemshort
    {2018}
    {Committee Member, Evergreen Culture and Climate Assessment}
  \twentyitemshort
    {2017-2018}
    {Student Representative to the Evergreen Board of Trustees}
  \twentyitemshort
    {October 2017}
    {Speaker, Return to Evergreen Governor's Mansion Event}
  \twentyitemshort
    {June 2017}
    {Presidential Equity Advisor}
  \twentyitemshort
    {2017-2018}
    {Leader of the Geoduck Student Union}
\end{twentyshort}
#+end_export

* projects

#+CALL: maketi(tb=projects-table)

#+RESULTS:
#+begin_export latex
\begin{twenty}
  \twentyitem
    {June 2020}
    {Containerized Integrated Development Environment}
    {https://github.com/branjam4/doom-emacs-docker.git}
    {I wanted to show some of the productivity gains and programs I had leveraged while learning how to use my development environment. But even though my professor and I both had experience in this development environment, we found it challenging to share programs and configuration strategies given limited time and competing priorities. So I learned to containerize my development environment. Now anyone with Docker can try out my workflows with a couple programs (git, docker) in less than five commands, where previously it could take dozens of programs and commands.}
  \twentyitem
    {2019-2020}
    {Systems Thinking Modelling Efforts}
    {Evergreen: Self-study}
    {Evaluation from faculty: "[Brandon] demonstrated significant expertise in understanding group and team dynamics. He had attended a meeting with the Team Entrepreneurship program and was able to translate their methodology into a systems approach. His work represents a synthesis of basic concepts from graph theory, communication, and systems theory. The origin of the work had several roots: 1. Brandon’s active participation in student governance, 2. Brandon’s interest in the application of systems theory to social systems, and 3. Brandon’s desire to improve communication and information flow in the Evergreen community."}
  \twentyitem
    {December 2018}
    {Authorship- Computational Linguistics Project}
    {Evergreen Program: Computational Linguistics}
    {Evaluation from faculty: "Brandon worked with four other students to complete the project on computationally identifying the author of a text. Their well-coordinated final presentation provided an organized overview of their process and a discussion of both obstacles and successes. Brandon provided leadership and empowerment to newer coders by guiding the group towards a process that emphasized an algorithm and descriptive understandings of what the code needed to accomplished, as well as developing the actual code and some of the details of testing strategies. The group embodied a learning community by making a commitment to make sure that everyone understood the algorithm and the code. Brandon also demonstrated their collaborative learning skills by helping two other groups on the project."}
  \twentyitem
    {June 2017}
    {Sentiment Analysis- Data Mining Project}
    {United Way of Pierce County}
    {Worked with a team of five to leverage sentiment analysis algorithms, collecting data in the form of tweets and posts from Facebook, to quantify how receptive Pierce County residents were to United Way's reports on understanding and assisting Pierce County's ALICE (Asset Limited, Income Constrained, Employed) population. I also went a little further and familiarized myself with the methodology and data used to identify our target demographics, which helped my team put our observations into perspective. My group recognized me as the member who went the extra mile in order to connect with our client and fill their needs.}
\end{twenty}
#+end_export



#+LATEX: \end{document}
* Setup :noexport:
** Outlining data structures
:PROPERTIES:
:VISIBILITY: all
:END:   
The twentysecondscv template contains four types of custom information:
  - twentyitem :: a table-like custom entry item, with:
    + date :: Not a strict category, can have ranges of dates or just one.
    + title :: Name of [job position | degree focus]
    + location :: Place where [job | degree] obtained
    + description :: Expand on the meaning of ~title~
  - twentyitemshort :: a shorter version of ~twentyitem~, with only:
    + date 
    + title
  - skills/skillstext :: two sections within the sidebar:
    + skills :: skill bars from 0-6; has more visual than textual appeal
    + skillstext :: additional skills, with text only, but still only 0-6
  - other :: catchall term for personal information, each of which gets its own custom field.

Other than those, there are two sections that simply have their =\section{name}= followed by plain text, which require virtually no fancy work to convert into the appropriate latex equivalent.
** First: Collect data
:PROPERTIES:
:VISIBILITY: folded
:END:
There are nine categories within the example file, seven of which I've "org-modified" for a somewhat more intuitive data entry process.
*** Contact
#+NAME: contact-table
| Property      | Value                                |
|---------------+--------------------------------------|
| profilepic    | resources/muffin-avatar.jpg          |
| cvname        | Brandon Ellington                    |
| cvjobtitle    | Networked\n +Social Systems Engineer |
| cvdate        | June 25 1993                         |
| cvaddress     | United States                        |
| cvnumberphone | (206)450-1343                        |
| cvmail        | branjam4@gmail.com                   |
| cvsite        | branjam.dev                          |

The catchall =custom= category. Each of these has a =\property{value}= representation in the latex file.
*** Education
#+BEGIN: propview :cols (DATE ITEM LOCATION DESCRIPTION)
#+NAME: education-table
| DATE        | ITEM                    | LOCATION                      | DESCRIPTION                                |
|-------------+-------------------------+-------------------------------+--------------------------------------------|
| 0           | "Education"             | 0                             | 0                                          |
| "2017-2020" | "Bachelor's of Science" | "The Evergreen State College" | "Networked and Social Systems Engineering" |
| "2017-2020" | "Bachelor's of Arts"    | "The Evergreen State College" | "Cyberphilosophy"                          |
|-------------+-------------------------+-------------------------------+--------------------------------------------|
|             |                         |                               |                                            |
#+END:
**** Bachelor's of Science
:PROPERTIES:
:DATE: 2017-2020
:LOCATION: The Evergreen State College
:DESCRIPTION: Networked and Social Systems Engineering
:END:
**** Bachelor's of Arts
:PROPERTIES:
:DATE: 2017-2020
:LOCATION: The Evergreen State College
:DESCRIPTION: Cyberphilosophy
:END:
*** Awards, Activities, and Achievements
#+BEGIN: propview :cols (DATE ITEM)
#+NAME: awards-table
| DATE            | ITEM                                                        |
|-----------------+-------------------------------------------------------------|
| 0               | "Awards, Activities, and Achievements"                      |
| "June 2019"     | "Innovation Across the Americas Award Recipient"            |
| "2017-2019"     | "Lynda.com CRM Advancement Fellow"                          |
| "October 2018"  | "Equity Honors Nominee"                                     |
| "2017-2018"     | "Student Representative to the Evergreen Board of Trustees" |
| "February 2018" | "Featured Speaker: DRIVE Conference 2018"                   |
| "October 2017"  | "Speaker: Return to Evergreen- Governor's Mansion Event"    |
| "June 2017"     | "Computer Engineering Scholarship"                          |
| "June 2017"     | "Presidential Equity Advisor"                               |
|-----------------+-------------------------------------------------------------|
|                 |                                                             |
#+END:
**** Innovation Across the Americas Award Recipient
:PROPERTIES:
:DATE: June 2019
:END:
**** Lynda.com CRM Advancement Fellow
:PROPERTIES:
:DATE: 2017-2019
:END:
**** Equity Honors Nominee
:PROPERTIES:
:DATE: October 2018
:END:
**** Student Representative to the Evergreen Board of Trustees
:PROPERTIES:
:DATE: 2017-2018
:END:
**** Featured Speaker: DRIVE Conference 2018
:PROPERTIES:
:DATE: February 2018
:END:
**** Speaker: Return to Evergreen- Governor's Mansion Event
:PROPERTIES:
:DATE: October 2017
:END:
**** Computer Engineering Scholarship
:PROPERTIES:
:DATE: June 2017
:END:
**** Presidential Equity Advisor
:PROPERTIES:
:DATE: June 2017
:END:
*** Projects
#+BEGIN: propview :cols (DATE ITEM LOCATION DESCRIPTION)
#+NAME: projects-table
| DATE          | ITEM                                                     | LOCATION                       ||
||
| 0             | "Projects"                                               | 0                              ||
| "09/17-Pres." | "IPDE: Integrated \"Personal Development\" Environment"  | "GitHub"                       | "The Evergreen program \"Student-Originated Software\" demonstrated the value of computational kindness: the ethical principle of lowering the cognitive burden on ourselves and others, inspired by efficient algorithms. Within the program I created a reproducible virtual machine image of an extended cognitive system for development and personal information management, which leverages Org-mode within Emacs. I continue to use and improve the software on a daily basis. Link to my provisioning repo: https://github.com/branjam4/branos-provisioning.git" |
| "01/19–08/19" | "Campus Systems Engagement Project"                      | "Evergreen"                    | "For my capstone, I applied systems theory and an interdisciplinary analysis of networks to augment participatory governance on campus. Through interviews and use of causal loop diagrams I identified key campus partnerships between faculty, staff, and students. My work culminated with presenting a workshop showcasing my discoveries to a group of faculty and staff in their summer institute series."                                                                                                                                                         |
| "04/17–09/18" | "Governance Optimization Project"                        | "Evergreen Student Government" | "Inspired by the Evergreen program \"Language and Power,\" along with insights from ethics and technology seminars, I advocated for a governance optimization project involving representatives of the student body and Services and Activities Fee Allocation Board members, then led its execution. The purpose of the project was to responsibly use both bureaucratic and charismatic power to improve the student experience, through using better communication structures, technology upgrades, and a strong sense of vision."                                    |
| "06/17-09/17" | "Enterprise Web Application Refactor- Student Elections" | "Evergreen"                    | "Engineering an enterprise web application refactor to improve student elections on campus taught me about building both technical and social trust into a system through requirements gathering, sprint planning, database design, unit testing, and version control. Systematized elements such as the Agile methodology and user-interface design increased my interest in quantifying the process of building trust itself, influencing future study. Project used PHP and Drupal."                                                                                  |
| "04/17–06/17" | "Sentiment Analysis (ALICE awareness)"                   | "United Way of Pierce County"  | "I led a team collecting social data and using sentiment analysis within Python and R in collaboration with United Way of Pierce County to help them answer this question: ”What actions can we take to reshape the system that created Asset Limited, Income Constrained, Employed (ALICE) households?” I rose to the challenge of putting the \"social\" in \"social data mining\"- exercising initiative, soft skills, and servant leadership to ensure the project's success."                                                                                       |
|---------------+----------------------------------------------------------+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|               |                                                          |                                ||
#+END:
**** IPDE: Integrated "Personal Development" Environment
:PROPERTIES:
:DATE: 09/17-Pres.
:LOCATION: GitHub
:DESCRIPTION: The Evergreen program "Student-Originated Software" demonstrated the value of computational kindness: the ethical principle of lowering the cognitive burden on ourselves and others, inspired by efficient algorithms. Within the program I created a reproducible virtual machine image of an extended cognitive system for development and personal information management, which leverages Org-mode within Emacs. I continue to use and improve the software on a daily basis. Link to my provisioning repo: https://github.com/branjam4/branos-provisioning.git
:END:
**** Campus Systems Engagement Project
:PROPERTIES:
:DATE: 01/19–08/19
:LOCATION: Evergreen
:DESCRIPTION: For my capstone, I applied systems theory and an interdisciplinary analysis of networks to augment participatory governance on campus. Through interviews and use of causal loop diagrams I identified key campus partnerships between faculty, staff, and students. My work culminated with presenting a workshop showcasing my discoveries to a group of faculty and staff in their summer institute series.
:END:
**** Governance Optimization Project
:PROPERTIES:
:DATE: 04/17–09/18
:LOCATION: Evergreen Student Government
:DESCRIPTION: Inspired by the Evergreen program "Language and Power," along with insights from ethics and technology seminars, I advocated for a governance optimization project involving representatives of the student body and Services and Activities Fee Allocation Board members, then led its execution. The purpose of the project was to responsibly use both bureaucratic and charismatic power to improve the student experience, through using better communication structures, technology upgrades, and a strong sense of vision.
:END:
**** Enterprise Web Application Refactor- Student Elections
:PROPERTIES:
:DATE: 06/17-09/17
:LOCATION: Evergreen
:DESCRIPTION: Engineering an enterprise web application refactor to improve student elections on campus taught me about building both technical and social trust into a system through requirements gathering, sprint planning, database design, unit testing, and version control. Systematized elements such as the Agile methodology and user-interface design increased my interest in quantifying the process of building trust itself, influencing future study. Project used PHP and Drupal.
:END:
**** Sentiment Analysis (ALICE awareness)
:PROPERTIES:
:DATE: 04/17–06/17
:LOCATION: United Way of Pierce County
:DESCRIPTION: I led a team collecting social data and using sentiment analysis within Python and R in collaboration with United Way of Pierce County to help them answer this question: ”What actions can we take to reshape the system that created Asset Limited, Income Constrained, Employed (ALICE) households?” I rose to the challenge of putting the "social" in "social data mining"- exercising initiative, soft skills, and servant leadership to ensure the project's success.
:END:
*** Skills
#+BEGIN: propview :cols (ITEM VALUE)
#+NAME: skills-table
| ITEM                  | VALUE |
|-----------------------+-------|
| "Skills"              |     0 |
| "Systems Engineering" |     4 |
| "Critical Thinking"   |   4.8 |
| "Python"              |     4 |
| "Social Data Mining"  |   3.6 |
| "Version Control"     |   3.5 |
|-----------------------+-------|
|                       |       |
#+END:

In this subtree there is an example of a [[file:20200901214515-dynamic_blocks.org][Dynamic Block]] keeping track of subtree values.
**** Systems Engineering
:PROPERTIES:
:Value: 4
:END:
**** Critical Thinking
:PROPERTIES:
:Value: 4.8
:END:
**** Python
:PROPERTIES:
:Value: 4
:END:
**** Social Data Mining
:PROPERTIES:
:Value: 3.6
:END:
**** Version Control
:PROPERTIES:
:Value: 3.5
:END:
*** Skills text
#+BEGIN: propview :cols (ITEM VALUE)
#+NAME: skillstext-table
| ITEM                          | VALUE |
|-------------------------------+-------|
| "Skills text"                 |     0 |
| "emacs"                       |   3.4 |
| "shell"                       |   3.4 |
| "database querying"           |     3 |
| "org-mode"                    |     3 |
| "object-oriented programming" |   2.9 |
| "image provisioning"          |   2.5 |
| "clojure"                     |   2.1 |
| "php"                         |     2 |
|-------------------------------+-------|
|                               |       |
#+END:

**** emacs
:PROPERTIES:
:Value: 3.4
:END:
**** shell
:PROPERTIES:
:Value: 3.4
:END:
**** database querying
:PROPERTIES:
:Value: 3
:END:
**** org-mode
:PROPERTIES:
:Value: 3
:END:
**** object-oriented programming
:PROPERTIES:
:Value: 2.9
:END:
**** image provisioning
:PROPERTIES:
:Value: 2.5
:END:
**** clojure
:PROPERTIES:
:Value: 2.1
:END:
**** php
:PROPERTIES:
:Value: 2
:END:
** Second: Transform data
:PROPERTIES:
:VISIBILITY: folded
:END:   
General notes:
The ~propview~ dynamic tables need the [[doom:.local/straight/repos/org-mode/contrib/lisp/org-collector.el][org-collector]] file explicitly loaded in doom (with the ~eval-buffer~ function, or lazily with ~use-package~).
The ~propview~ tables require ~#+NAME:~ /below/ the ~#+BEGIN:~ header for code blocks to access their contents. These lead to =error= messages in the minibuffer but in practice are harmless. In theory I could get rid of these errors by defining a custom ~propview~ dynamic org block that inserts the table name during execution.
We'll need to run any blocks that say "~defun~" to enable other code blocks to use that code. Thought ~:prologue~ would work but it seems the focus there is on predefined setup/cleanup vs. "run this code block before this one"
Take note of
+ how I skip lines: the ~:skip 2~ part of the ~orgtbl-to-<structure>~ function call
+ how I omit the last line: the ~:llfmt ""~ part of the ~org-combine-plists~ or ~orgtbl-to-<structure>~ function calls
The ~propview~ tables have some extraneous information, namely the heading name's inclusion within the dynamic table, then a blank last line. Thankfully org-mode contributors recognize this common situation (among others involving a special need for customizing the format of the last line specifically), having a way to define an alternate format within ~org-combine-plists~.
*** twentyitem/twentyitemshort
These use:
+ ~orgtbl-to-generic~ :: to break the org table down,
+ ~org-combine-plists~ :: to construct a proper =\begin...end{twenty}= container, separating items by new lines.
#+NAME: ticonv
#+BEGIN_SRC elisp :exports none
(defun orgtbl-to-twentyitem (table params)
       "Convert the orgtbl-mode TABLE to a TwentySeconds CV {twentyitem} table."
       (orgtbl-to-generic
        table
        (org-combine-plists
         '(:tstart "\\begin{twenty}" :tend "\\end{twenty}" :lstart "  \\twentyitem\n" :lend "" :fmt "    {%s}" :llfmt "" :sep "\n")
         params)))

(defun orgtbl-to-twentyitemshort (table params)
       "Convert the orgtbl-mode TABLE to a TwentySeconds CV {twentyitemshort} table."
       (orgtbl-to-generic
        table
        (org-combine-plists
         '(:tstart "\\begin{twentyshort}" :tend "\\end{twentyshort}" :lstart "  \\twentyitemshort\n" :lend "" :fmt "    {%s}" :llfmt "" :sep "\n")
         params)))
#+END_SRC

#+RESULTS: ticonv
: orgtbl-to-twentyitemshort

#+NAME: maketi
#+BEGIN_SRC elisp :var tb=education-table :var params='(:skip 2) :results latex :exports results :prologue ticonv
(orgtbl-to-twentyitem tb params)
#+END_SRC

#+RESULTS: maketi
#+begin_export latex
\begin{twenty}
  \twentyitem
    {2017-2020}
    {Bachelor of Science}
    {The Evergreen State College}
    {Majoring in Computer Science}
  \twentyitem
    {2017-2020}
    {Bachelor of Arts}
    {The Evergreen State College}
    {Business Concentration}
\end{twenty}
#+end_export

#+NAME: mktishort
#+BEGIN_SRC elisp :var tb=awards-table :results latex :exports results :prologue ticonv
(orgtbl-to-twentyitemshort tb '(:skip 2))
#+END_SRC

#+RESULTS: mktishort
#+begin_export latex
\begin{twentyshort}
  \twentyitemshort
    {June 2019}
    {Innovation Across the Americas Scholarship}
  \twentyitemshort
    {October 2018}
    {Equity Honors Nominee}
\end{twentyshort}
#+end_export
*** skills/skillstext
These use ~orgtbl-to-orgtbl~ to trim the top rows and the last row, so we're left with just the data we need to work with. The example file has all these skills comma separated on one line. But ~orgtbl-to-<othertable>~ explicitly enters a new line per table row, so I send these to separate functions for the latex processing.

#+NAME: skillsconv
#+BEGIN_SRC elisp :var tb=skills-table :results raw :exports results 
(orgtbl-to-orgtbl tb '(:skip 2 :llfmt ""))
#+END_SRC

#+RESULTS: skillsconv
| pursuer of rabbits |    5 |
| good manners       |    4 |
| outgoing           |  4.3 |
| polite             |    4 |
| Java               | 0.01 |

#+NAME: makeskillbar
#+BEGIN_SRC elisp :var tbl=skillsconv :results latex
(concat "\\skills{"
        (mapconcat
         (lambda (x)
           (concat "{" (car x) "/" (cadr x) "}"))
         (org-table-to-lisp tbl) ",")
        "}")
#+END_SRC

#+RESULTS: makeskillbar
#+begin_export latex
\skills{{pursuer of rabbits/5},{good manners/4},{outgoing/4.3},{polite/4},{Java/0.01}}
#+end_export

#+NAME: skillstextconv
#+BEGIN_SRC elisp :var tb=skillstext-table :results raw :exports results 
(orgtbl-to-orgtbl tb '(:skip 2 :llfmt ""))
#+END_SRC

#+RESULTS: skillstextconv
| lovely       | 4 |
| narcissistic | 3 |

#+NAME: makeskillstext
#+BEGIN_SRC elisp :var tbl=skillstextconv :results latex
(concat "\\skillstext{"
        (mapconcat
         (lambda (x)
           (concat "{" (car x) "/" (cadr x) "}"))
         (org-table-to-lisp tbl) ",")
        "}")
#+END_SRC

#+RESULTS: makeskillstext
#+begin_export latex
\skillstext{{lovely/4},{narcissistic/3}}
#+end_export

*** Contact/personal info
Similar process as the skills and skilltext, but a little simpler since we do not have to trim the table first.

#+NAME: latex-contact-info
#+BEGIN_SRC elisp :var tbl=contact-table :results latex
(mapconcat (lambda (x) (concat "\\" (car x) "{" (cadr x) "}")) tbl "\n")
#+END_SRC

#+RESULTS: latex-contact-info
#+begin_export latex
\profilepic{alice.jpeg}
\cvname{Alice}
\cvjobtitle{Adventurer}
\cvdate{26 November 1865}
\cvaddress{United Kingdom}
\cvnumberphone{+39 0325658974}
\cvmail{alice@wonderland.com}
\cvsite{http://en.wikipedia.org}
#+end_export
** Third: Load data
:PROPERTIES:
:VISIBILITY: folded
:END:   
Compare with [[file:20200902004719-twentyseconds_cv_example_static.org][TwentySeconds CV Example (Static)]]
We can use ~org-export-dispatch~ to interactively make a =.tex= buffer/file (for comparison with the original example), or we can produce a pdf directly after setup. In either case org inserts some extra metadata into the =latex= output, which may not be what we want. So we must enable the =Body only:= option in the dispatch menu (which should be ~Ctrl+b~ while in the menu). See the below section for some troubleshooting hints.

Assuming a successful build, the following produces a pdf file non-interactively, so you can use it as a hook or in a script if you choose to extend this:
#+BEGIN_SRC elisp
(org-latex-export-to-pdf nil nil nil 'only-body nil)
#+END_SRC

#+RESULTS:
: /home/branjam/Downloads/resume/resume.pdf

** Troubleshooting and caveats
:PROPERTIES:
:VISIBILITY: folded
:END:   
There is (unfortunately) a lot that has to go right for a successful export:
+ Correctly using =:PROPERTIES:= so that the ~propview~ tables build properly.
+ Double checking that code blocks ran properly in the transformation step.
+ Not directly messing with the automatically constructed tables (except in the case of needing to rename it).
+ Ensuring the =\profilepic= is actually present in the stated location.
+ Ensuring this file and the =twentysecondcv.cls= file are in the same directory.
+ Having a proper =latex= builder.
+ A lack of bitrot :: The document skeleton is fragile. Were anything to change in the =twentysecondscv= codebase, this would not warn about it; it would simply build then fail, or fail to build.

But with all those caveats out of the way, I have this configured for compatibility with the =twentysecondcv= template such that on the front-end someone can direct most of their focus to extracting or writing content, instead of how the latex itself works or weighing the cost of making small adjustments with introducing potential syntax errors or unintended side-effects.

** Final thoughts
:PROPERTIES:
:VISIBILITY: folded
:END:   
Not configuring the code to run automatically might mean working with this file currently may be as tedious as simply editing the example latex file. This mostly was a learning experience for me: I am familiar enough with org to produce basic pdfs. But I had to look into the internals of =org-table=, =elisp= and =ox-latex= to figure out how to produce a =.pdf= file, specifically through =twentysecondcv.cls=, from an org file.

My eventual intention here is showing off a resume pulled from a database, whose entries could change depending on rules set in database queries, which you would then funnel into org-mode and build on-the-fly. For example:
+ perhaps you've recorded a job's keywords within org, so you want to match skills and experience with its keywords.
+ you have a personal relationship manager integrated with org-mode, so when you form promising new professional connections, you'd like to tailor the resume you send them to their stated preferences.

It is almost possible with the current file; what I lack at the moment is both:
+ a database
+ a database -> org-mode heading/table conversion strategy.

* Local Variables :noexport:
:PROPERTIES:
:VISIBILITY: folded
:END:   
#+BEGIN_EXAMPLE org
,# Local Variables:
,# before-save-hook: org-update-all-dblocks
,# after-save-hook: bran/org-latex-export-to-twentyseconds
,# End:
#+END_EXAMPLE
